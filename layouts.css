*, *::before, *::after {
	padding: 0;
	margin: 0;
	border: 0;
	box-sizing: border-box;
}

/* подключение media-запроса с отдельным файлом стилей в .css */
@import url(color.css) screen and (color);

html, body {
	height: 100%;
}

body {
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	/* Ограничение ширины контейнера, на мобильнике мелко, но виден весь контент */
	/*min-width: 1200px;
	padding: 0 15px; отступы справа и слева по 15px */
}

/* центрирование блока .container по размеру 1200px 
Шире блок занимать место не будет */
.container {
	/*max-width: 1200px; ширина центрирования блока*/
	margin: 0 auto;
	padding: 0 15px;
	/* отступы справа и слева по 15px */
}

/* для резиновой(отзывчивой) верстки убрать везде в коде фиксированные размеры ширин, надо ставить max, min, сетку в % */

/* адаптивная верстка подстраивается под разные размеры экрана с помощью brakepoints, media-запросов */

/* медиа-запросы */
/* desktop-first */
/* max-width, уменьшение ширины от макимальной ширины */

@media (max-width: 1200px) {
	.container {
		max-width: 970px;
	}
}

@media (max-width: 992px) {
	.container {
		max-width: 750px;
	}
}

@media (max-width: 767px) {
	.container {
		max-width: none;
	}
}

/* mobile-first */
/* min-width, увеличение ширины от минимальной ширины */

@media (min-width: 0) {
	.container {
		max-width: none;
	}
}

@media (min-width: 768px) {
	.container {
		max-width: 750px;
	}
}

@media (min-width: 992px) {
	.container {
		max-width: 970px;
	}
}

@media (min-width: 1200px) {
	.container {
		max-width: 1170px;
	}
}

/* Адаптивно-отзывчивая верстка. Наиболее предпочтительно. */

/* media-запросы */

@media all {
	/* применяется по умолчанию для всех устройств */
	/* если не указывается, то используется по умолчанию */
}

@media print {
	/* применяется для документов на печать, например, предпросмотр */
}

@media screen {
	/* применяется для цветных мониторов */
}

@media speech {
	/* для синтезаторов голоса */
}

@media (orientation: portrait) {
	/* для портретной ориентации */
}

@media (orientation: landscape) {
	/* для альбомной ориентации */
}

@media (resolution: 300dpi) {
	/* варианты: resolution, min-resolution, max-resolution */
	/* разрешение, точки на дюйм */
}

@media (monochrome) {
	/* будет применяться на ч/б-экранах */
}

@media (max-width: 767px) {
	/* максимальная ширина */
	.container {
		max-width: none; /* сработает на экранах шириной от 767px и уже */
	}
}

@media (min-width: 768px) {
	/* минимальная ширина */
	.container {
		max-width: none; /* сработает на экранах шириной от 768px и шире */
	}
}

@media (max-height: 500px) {
	/* максимальная высота */
}

@media (min-height: 500px) {
	/* минимальная высота */
}

/* комбинирование media-зпросов */

@media (min-height: 500px) and (min-width: 768px) {

}

@media screen and (min-width: 768px) {

}

@media screen or (min-width: 768px) {
	/* или */
}

/* сложный запрос */

@media screen and (max-width: 992px), screen and (max-height: 700px) {
	/* or тоже самое что и запятая (,) */
}

/* изображения */

img {
	max-width: 100%; /* размер изображения всегда будет подстраиваться под ширину родителя */
}
